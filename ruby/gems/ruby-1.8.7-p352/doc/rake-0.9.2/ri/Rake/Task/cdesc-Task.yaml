--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: List of actions attached to a task.
  name: actions
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Application owning this task.
  name: application
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Comment for this task. Restricted to a single line of no more than 50 characters.
  name: comment
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Full text of the (possibly multi-line) comment.
  name: full_comment
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: File/Line locations of each of the task definitions for this task (only valid if the task was defined with the detect location option set).
  name: locations
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: List of prerequisites for a task.
  name: prerequisites
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Array of nested namespaces names used for task lookup by this task.
  name: scope
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: List of sources for task.
  name: sources
  rw: W
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: create_rule
- !ruby/object:RI::MethodSummary 
  name: define_task
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: scope_name
- !ruby/object:RI::MethodSummary 
  name: task_defined?
- !ruby/object:RI::MethodSummary 
  name: tasks
comment: 
- !ruby/struct:SM::Flow::P 
  body: "######################################################################### A Task is the basic unit of work in a Rakefile. Tasks have associated actions (possibly more than one) and a list of prerequisites. When invoked, a task will first ensure that all of its prerequisites have an opportunity to run and then it will execute its own actions."
- !ruby/struct:SM::Flow::P 
  body: Tasks are not usually created directly using the new method, but rather use the <tt>file</tt> and <tt>task</tt> convenience methods.
constants: []

full_name: Rake::Task
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: add_description
- !ruby/object:RI::MethodSummary 
  name: arg_names
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: clear_actions
- !ruby/object:RI::MethodSummary 
  name: clear_prerequisites
- !ruby/object:RI::MethodSummary 
  name: comment=
- !ruby/object:RI::MethodSummary 
  name: enhance
- !ruby/object:RI::MethodSummary 
  name: execute
- !ruby/object:RI::MethodSummary 
  name: inspect
- !ruby/object:RI::MethodSummary 
  name: investigation
- !ruby/object:RI::MethodSummary 
  name: invoke
- !ruby/object:RI::MethodSummary 
  name: name
- !ruby/object:RI::MethodSummary 
  name: needed?
- !ruby/object:RI::MethodSummary 
  name: prerequisite_tasks
- !ruby/object:RI::MethodSummary 
  name: reenable
- !ruby/object:RI::MethodSummary 
  name: set_arg_names
- !ruby/object:RI::MethodSummary 
  name: source
- !ruby/object:RI::MethodSummary 
  name: sources
- !ruby/object:RI::MethodSummary 
  name: timestamp
- !ruby/object:RI::MethodSummary 
  name: to_s
name: Task
superclass: Object
