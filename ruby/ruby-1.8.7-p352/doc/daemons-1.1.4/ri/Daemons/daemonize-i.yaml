--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Daemonize the currently runnig process, i.e. the calling process will become a daemon.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "+options+:"
    body: A hash that may contain one or more of the options listed below
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 3
  text: "Options:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:ontop</tt>:"
    body: When given, stay on top, i.e. do not daemonize the application
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:backtrace</tt>:"
    body: Write a backtrace of the last exceptions to the file '[app_name].log' in the pid-file directory if the application exits due to an uncaught exception
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:app_name</tt>:"
    body: The name of the application. This will be used to contruct the name of the pid files and log files. Defaults to the basename of the script.
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:dir_mode</tt>:"
    body: Either <tt>:script</tt> (the directory for writing files to given by <tt>:dir</tt> is interpreted relative to the script location given by <tt>script</tt>, the default) or <tt>:normal</tt> (the directory given by <tt>:dir</tt> is interpreted as a (absolute or relative) path) or <tt>:system</tt> (<tt>/var/run</tt> is used as the file directory)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:dir</tt>:"
    body: Used in combination with <tt>:dir_mode</tt> (description above)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:log_dir</tt>:"
    body: A specific directory to put the log files into (when not given, resort to the default location as derived from the :dir_mode and :dir options
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:log_output</tt>:"
    body: When given (i.e. set to true), redirect both STDOUT and STDERR to a logfile named '[app_name].output' in the pid-file directory
  type: :NOTE
- !ruby/struct:SM::Flow::RULE 
  width: 3
- !ruby/struct:SM::Flow::H 
  level: 3
  text: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  options = {\n    :backtrace  =&gt; true,\n    :ontop      =&gt; true,\n    :log_output =&gt; true\n  }\n\n  Daemons.daemonize(options)\n\n  # Server loop:\n  loop {\n    conn = accept_conn()\n    puts &quot;some text which goes to the output logfile&quot;\n    serve(conn)\n  }\n"
full_name: Daemons#daemonize
is_singleton: false
name: daemonize
params: (options = {})
visibility: public
